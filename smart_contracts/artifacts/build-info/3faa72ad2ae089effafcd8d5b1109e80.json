{
	"id": "3faa72ad2ae089effafcd8d5b1109e80",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.19",
	"solcLongVersion": "0.8.19+commit.7dd6d404",
	"input": {
		"language": "Solidity",
		"sources": {
			"elysium_receipt_invoice_number.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\ncontract InvoiceNumberStorage {\r\n    mapping(bytes32 => bool) public invoiceNumbers;\r\n\r\n    event InvoiceNumberStored(bytes32 indexed invoiceNumber);\r\n\r\n    function storeInvoiceNumber(bytes32 invoiceNumber) external {\r\n        require(!invoiceNumbers[invoiceNumber], \"Invoice number already stored\");\r\n        invoiceNumbers[invoiceNumber] = true;\r\n        emit InvoiceNumberStored(invoiceNumber);\r\n    }\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"elysium_receipt_invoice_number.sol": {
				"InvoiceNumberStorage": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "invoiceNumber",
									"type": "bytes32"
								}
							],
							"name": "InvoiceNumberStored",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"name": "invoiceNumbers",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "invoiceNumber",
									"type": "bytes32"
								}
							],
							"name": "storeInvoiceNumber",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"elysium_receipt_invoice_number.sol\":60:468  contract InvoiceNumberStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"elysium_receipt_invoice_number.sol\":60:468  contract InvoiceNumberStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x417b1a06\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xac386bea\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"elysium_receipt_invoice_number.sol\":217:465  function storeInvoiceNumber(bytes32 invoiceNumber) external {... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"elysium_receipt_invoice_number.sol\":97:143  mapping(bytes32 => bool) public invoiceNumbers */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_10:\n      tag_11\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"elysium_receipt_invoice_number.sol\":217:465  function storeInvoiceNumber(bytes32 invoiceNumber) external {... */\n    tag_8:\n        /* \"elysium_receipt_invoice_number.sol\":297:311  invoiceNumbers */\n      0x00\n        /* \"elysium_receipt_invoice_number.sol\":297:326  invoiceNumbers[invoiceNumber] */\n      dup1\n        /* \"elysium_receipt_invoice_number.sol\":312:325  invoiceNumber */\n      dup3\n        /* \"elysium_receipt_invoice_number.sol\":297:326  invoiceNumbers[invoiceNumber] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"elysium_receipt_invoice_number.sol\":296:326  !invoiceNumbers[invoiceNumber] */\n      iszero\n        /* \"elysium_receipt_invoice_number.sol\":288:360  require(!invoiceNumbers[invoiceNumber], \"Invoice number already stored\") */\n      tag_15\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_16\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_15:\n        /* \"elysium_receipt_invoice_number.sol\":403:407  true */\n      0x01\n        /* \"elysium_receipt_invoice_number.sol\":371:385  invoiceNumbers */\n      0x00\n        /* \"elysium_receipt_invoice_number.sol\":371:400  invoiceNumbers[invoiceNumber] */\n      dup1\n        /* \"elysium_receipt_invoice_number.sol\":386:399  invoiceNumber */\n      dup4\n        /* \"elysium_receipt_invoice_number.sol\":371:400  invoiceNumbers[invoiceNumber] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"elysium_receipt_invoice_number.sol\":371:407  invoiceNumbers[invoiceNumber] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"elysium_receipt_invoice_number.sol\":443:456  invoiceNumber */\n      dup1\n        /* \"elysium_receipt_invoice_number.sol\":423:457  InvoiceNumberStored(invoiceNumber) */\n      0xa1ab8644e9a7c3b0e098a944a8972d4492d3b65382f144c9404228109fd2b9f1\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"elysium_receipt_invoice_number.sol\":217:465  function storeInvoiceNumber(bytes32 invoiceNumber) external {... */\n      pop\n      jump\t// out\n        /* \"elysium_receipt_invoice_number.sol\":97:143  mapping(bytes32 => bool) public invoiceNumbers */\n    tag_11:\n      mstore(0x20, 0x00)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_19:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_21:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_22:\n        /* \"#utility.yul\":490:514   */\n      tag_35\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_21\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_36\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_36:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_23:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_38\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_22\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_7:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_41\n      tag_19\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":766:885   */\n    tag_40:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_42\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_23\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1115   */\n    tag_24:\n        /* \"#utility.yul\":1059:1066   */\n      0x00\n        /* \"#utility.yul\":1102:1107   */\n      dup2\n        /* \"#utility.yul\":1095:1108   */\n      iszero\n        /* \"#utility.yul\":1088:1109   */\n      iszero\n        /* \"#utility.yul\":1077:1109   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1121:1230   */\n    tag_25:\n        /* \"#utility.yul\":1202:1223   */\n      tag_45\n        /* \"#utility.yul\":1217:1222   */\n      dup2\n        /* \"#utility.yul\":1202:1223   */\n      tag_24\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1197:1200   */\n      dup3\n        /* \"#utility.yul\":1190:1224   */\n      mstore\n        /* \"#utility.yul\":1121:1230   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1446   */\n    tag_13:\n        /* \"#utility.yul\":1323:1327   */\n      0x00\n        /* \"#utility.yul\":1361:1363   */\n      0x20\n        /* \"#utility.yul\":1350:1359   */\n      dup3\n        /* \"#utility.yul\":1346:1364   */\n      add\n        /* \"#utility.yul\":1338:1364   */\n      swap1\n      pop\n        /* \"#utility.yul\":1374:1439   */\n      tag_47\n        /* \"#utility.yul\":1436:1437   */\n      0x00\n        /* \"#utility.yul\":1425:1434   */\n      dup4\n        /* \"#utility.yul\":1421:1438   */\n      add\n        /* \"#utility.yul\":1412:1418   */\n      dup5\n        /* \"#utility.yul\":1374:1439   */\n      tag_25\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1236:1446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1452:1621   */\n    tag_26:\n        /* \"#utility.yul\":1536:1547   */\n      0x00\n        /* \"#utility.yul\":1570:1576   */\n      dup3\n        /* \"#utility.yul\":1565:1568   */\n      dup3\n        /* \"#utility.yul\":1558:1577   */\n      mstore\n        /* \"#utility.yul\":1610:1614   */\n      0x20\n        /* \"#utility.yul\":1605:1608   */\n      dup3\n        /* \"#utility.yul\":1601:1615   */\n      add\n        /* \"#utility.yul\":1586:1615   */\n      swap1\n      pop\n        /* \"#utility.yul\":1452:1621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1627:1806   */\n    tag_27:\n        /* \"#utility.yul\":1767:1798   */\n      0x496e766f696365206e756d62657220616c72656164792073746f726564000000\n        /* \"#utility.yul\":1763:1764   */\n      0x00\n        /* \"#utility.yul\":1755:1761   */\n      dup3\n        /* \"#utility.yul\":1751:1765   */\n      add\n        /* \"#utility.yul\":1744:1799   */\n      mstore\n        /* \"#utility.yul\":1627:1806   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1812:2178   */\n    tag_28:\n        /* \"#utility.yul\":1954:1957   */\n      0x00\n        /* \"#utility.yul\":1975:2042   */\n      tag_51\n        /* \"#utility.yul\":2039:2041   */\n      0x1d\n        /* \"#utility.yul\":2034:2037   */\n      dup4\n        /* \"#utility.yul\":1975:2042   */\n      tag_26\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1968:2042   */\n      swap2\n      pop\n        /* \"#utility.yul\":2051:2144   */\n      tag_52\n        /* \"#utility.yul\":2140:2143   */\n      dup3\n        /* \"#utility.yul\":2051:2144   */\n      tag_27\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":2169:2171   */\n      0x20\n        /* \"#utility.yul\":2164:2167   */\n      dup3\n        /* \"#utility.yul\":2160:2172   */\n      add\n        /* \"#utility.yul\":2153:2172   */\n      swap1\n      pop\n        /* \"#utility.yul\":1812:2178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2184:2603   */\n    tag_17:\n        /* \"#utility.yul\":2350:2354   */\n      0x00\n        /* \"#utility.yul\":2388:2390   */\n      0x20\n        /* \"#utility.yul\":2377:2386   */\n      dup3\n        /* \"#utility.yul\":2373:2391   */\n      add\n        /* \"#utility.yul\":2365:2391   */\n      swap1\n      pop\n        /* \"#utility.yul\":2437:2446   */\n      dup2\n        /* \"#utility.yul\":2431:2435   */\n      dup2\n        /* \"#utility.yul\":2427:2447   */\n      sub\n        /* \"#utility.yul\":2423:2424   */\n      0x00\n        /* \"#utility.yul\":2412:2421   */\n      dup4\n        /* \"#utility.yul\":2408:2425   */\n      add\n        /* \"#utility.yul\":2401:2448   */\n      mstore\n        /* \"#utility.yul\":2465:2596   */\n      tag_54\n        /* \"#utility.yul\":2591:2595   */\n      dup2\n        /* \"#utility.yul\":2465:2596   */\n      tag_28\n      jump\t// in\n    tag_54:\n        /* \"#utility.yul\":2457:2596   */\n      swap1\n      pop\n        /* \"#utility.yul\":2184:2603   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122083fb22f968860ff1562f89833e043ceb9d33d38f2413a71d93bd3fdde421cd8464736f6c63430008130033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102b3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063417b1a061461003b578063ac386bea14610057575b600080fd5b6100556004803603810190610050919061019d565b610087565b005b610071600480360381019061006c919061019d565b610142565b60405161007e91906101e5565b60405180910390f35b60008082815260200190815260200160002060009054906101000a900460ff16156100e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100de9061025d565b60405180910390fd5b600160008083815260200190815260200160002060006101000a81548160ff021916908315150217905550807fa1ab8644e9a7c3b0e098a944a8972d4492d3b65382f144c9404228109fd2b9f160405160405180910390a250565b60006020528060005260406000206000915054906101000a900460ff1681565b600080fd5b6000819050919050565b61017a81610167565b811461018557600080fd5b50565b60008135905061019781610171565b92915050565b6000602082840312156101b3576101b2610162565b5b60006101c184828501610188565b91505092915050565b60008115159050919050565b6101df816101ca565b82525050565b60006020820190506101fa60008301846101d6565b92915050565b600082825260208201905092915050565b7f496e766f696365206e756d62657220616c72656164792073746f726564000000600082015250565b6000610247601d83610200565b915061025282610211565b602082019050919050565b600060208201905081810360008301526102768161023a565b905091905056fea264697066735822122083fb22f968860ff1562f89833e043ceb9d33d38f2413a71d93bd3fdde421cd8464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2B3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x417B1A06 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xAC386BEA EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x1E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE SWAP1 PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xA1AB8644E9A7C3B0E098A944A8972D4492D3B65382F144C9404228109FD2B9F1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A DUP2 PUSH2 0x167 JUMP JUMPDEST DUP2 EQ PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x197 DUP2 PUSH2 0x171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3 JUMPI PUSH2 0x1B2 PUSH2 0x162 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C1 DUP5 DUP3 DUP6 ADD PUSH2 0x188 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E766F696365206E756D62657220616C72656164792073746F726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247 PUSH1 0x1D DUP4 PUSH2 0x200 JUMP JUMPDEST SWAP2 POP PUSH2 0x252 DUP3 PUSH2 0x211 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x276 DUP2 PUSH2 0x23A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xFB 0x22 0xF9 PUSH9 0x860FF1562F89833E04 EXTCODECOPY 0xEB SWAP14 CALLER 0xD3 DUP16 0x24 SGT 0xA7 SAR SWAP4 0xBD EXTCODEHASH 0xDD 0xE4 0x21 0xCD DUP5 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "60:408:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@invoiceNumbers_5": {
									"entryPoint": 322,
									"id": 5,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@storeInvoiceNumber_33": {
									"entryPoint": 135,
									"id": 33,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 413,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9": {
									"entryPoint": 529,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2606:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "756:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "802:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "798:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "769:32:1"
															},
															"nodeType": "YulIf",
															"src": "766:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "895:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "924:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "914:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "939:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "726:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "737:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "749:6:1",
														"type": ""
													}
												],
												"src": "690:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1067:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1077:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1102:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1095:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1077:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1049:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1059:7:1",
														"type": ""
													}
												],
												"src": "1025:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1180:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1197:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1217:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1202:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1202:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1190:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1190:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1168:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1175:3:1",
														"type": ""
													}
												],
												"src": "1121:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1328:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1338:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1350:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1361:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1346:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1338:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1412:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1436:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1421:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1374:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1374:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1374:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1300:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1312:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1323:4:1",
														"type": ""
													}
												],
												"src": "1236:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1548:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1565:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1570:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1558:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1558:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1558:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1586:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1605:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1610:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1601:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1601:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1586:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1520:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1525:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1536:11:1",
														"type": ""
													}
												],
												"src": "1452:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1733:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1755:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1763:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1751:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1751:14:1"
																	},
																	{
																		"hexValue": "496e766f696365206e756d62657220616c72656164792073746f726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1767:31:1",
																		"type": "",
																		"value": "Invoice number already stored"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1744:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1744:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1744:55:1"
														}
													]
												},
												"name": "store_literal_in_memory_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1725:6:1",
														"type": ""
													}
												],
												"src": "1627:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1958:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1968:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2039:2:1",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1975:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1975:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1968:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2140:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9",
																	"nodeType": "YulIdentifier",
																	"src": "2051:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2153:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2164:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2169:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2160:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2160:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1946:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1954:3:1",
														"type": ""
													}
												],
												"src": "1812:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2355:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2365:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2377:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2388:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2373:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2365:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2412:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2423:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2408:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2408:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2431:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2437:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2427:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2427:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2401:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2401:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2457:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2591:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2465:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2465:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2457:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2335:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2350:4:1",
														"type": ""
													}
												],
												"src": "2184:419:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invoice number already stored\")\n\n    }\n\n    function abi_encode_t_stringliteral_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063417b1a061461003b578063ac386bea14610057575b600080fd5b6100556004803603810190610050919061019d565b610087565b005b610071600480360381019061006c919061019d565b610142565b60405161007e91906101e5565b60405180910390f35b60008082815260200190815260200160002060009054906101000a900460ff16156100e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100de9061025d565b60405180910390fd5b600160008083815260200190815260200160002060006101000a81548160ff021916908315150217905550807fa1ab8644e9a7c3b0e098a944a8972d4492d3b65382f144c9404228109fd2b9f160405160405180910390a250565b60006020528060005260406000206000915054906101000a900460ff1681565b600080fd5b6000819050919050565b61017a81610167565b811461018557600080fd5b50565b60008135905061019781610171565b92915050565b6000602082840312156101b3576101b2610162565b5b60006101c184828501610188565b91505092915050565b60008115159050919050565b6101df816101ca565b82525050565b60006020820190506101fa60008301846101d6565b92915050565b600082825260208201905092915050565b7f496e766f696365206e756d62657220616c72656164792073746f726564000000600082015250565b6000610247601d83610200565b915061025282610211565b602082019050919050565b600060208201905081810360008301526102768161023a565b905091905056fea264697066735822122083fb22f968860ff1562f89833e043ceb9d33d38f2413a71d93bd3fdde421cd8464736f6c63430008130033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x417B1A06 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xAC386BEA EQ PUSH2 0x57 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6C SWAP2 SWAP1 PUSH2 0x19D JUMP JUMPDEST PUSH2 0x142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7E SWAP2 SWAP1 PUSH2 0x1E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE SWAP1 PUSH2 0x25D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP1 PUSH32 0xA1AB8644E9A7C3B0E098A944A8972D4492D3B65382F144C9404228109FD2B9F1 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x17A DUP2 PUSH2 0x167 JUMP JUMPDEST DUP2 EQ PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x197 DUP2 PUSH2 0x171 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B3 JUMPI PUSH2 0x1B2 PUSH2 0x162 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C1 DUP5 DUP3 DUP6 ADD PUSH2 0x188 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x1CA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E766F696365206E756D62657220616C72656164792073746F726564000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247 PUSH1 0x1D DUP4 PUSH2 0x200 JUMP JUMPDEST SWAP2 POP PUSH2 0x252 DUP3 PUSH2 0x211 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x276 DUP2 PUSH2 0x23A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xFB 0x22 0xF9 PUSH9 0x860FF1562F89833E04 EXTCODECOPY 0xEB SWAP14 CALLER 0xD3 DUP16 0x24 SGT 0xA7 SAR SWAP4 0xBD EXTCODEHASH 0xDD 0xE4 0x21 0xCD DUP5 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ",
							"sourceMap": "60:408:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:248;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;97:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;217:248;297:14;:29;312:13;297:29;;;;;;;;;;;;;;;;;;;;;296:30;288:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;403:4;371:14;:29;386:13;371:29;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;443:13;423:34;;;;;;;;;;217:248;:::o;97:46::-;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:90::-;1059:7;1102:5;1095:13;1088:21;1077:32;;1025:90;;;:::o;1121:109::-;1202:21;1217:5;1202:21;:::i;:::-;1197:3;1190:34;1121:109;;:::o;1236:210::-;1323:4;1361:2;1350:9;1346:18;1338:26;;1374:65;1436:1;1425:9;1421:17;1412:6;1374:65;:::i;:::-;1236:210;;;;:::o;1452:169::-;1536:11;1570:6;1565:3;1558:19;1610:4;1605:3;1601:14;1586:29;;1452:169;;;;:::o;1627:179::-;1767:31;1763:1;1755:6;1751:14;1744:55;1627:179;:::o;1812:366::-;1954:3;1975:67;2039:2;2034:3;1975:67;:::i;:::-;1968:74;;2051:93;2140:3;2051:93;:::i;:::-;2169:2;2164:3;2160:12;2153:19;;1812:366;;;:::o;2184:419::-;2350:4;2388:2;2377:9;2373:18;2365:26;;2437:9;2431:4;2427:20;2423:1;2412:9;2408:17;2401:47;2465:131;2591:4;2465:131;:::i;:::-;2457:139;;2184:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "138200",
								"executionCost": "183",
								"totalCost": "138383"
							},
							"external": {
								"invoiceNumbers(bytes32)": "2796",
								"storeInvoiceNumber(bytes32)": "28118"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 60,
									"end": 468,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 60,
									"end": 468,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 60,
									"end": 468,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 468,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 60,
									"end": 468,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 468,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 60,
									"end": 468,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 468,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 60,
									"end": 468,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 468,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 468,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 60,
									"end": 468,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 60,
									"end": 468,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 60,
									"end": 468,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 60,
									"end": 468,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 468,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 60,
									"end": 468,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 60,
									"end": 468,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 468,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 60,
									"end": 468,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 60,
									"end": 468,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122083fb22f968860ff1562f89833e043ceb9d33d38f2413a71d93bd3fdde421cd8464736f6c63430008130033",
									".code": [
										{
											"begin": 60,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "417B1A06"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "AC386BEA"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 60,
											"end": 468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 60,
											"end": 468,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 217,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 217,
											"end": 465,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 217,
											"end": 465,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 217,
											"end": 465,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 217,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 217,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 217,
											"end": 465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 217,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 97,
											"end": 143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 97,
											"end": 143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 97,
											"end": 143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 217,
											"end": 465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 297,
											"end": 311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 312,
											"end": 325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 326,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 326,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 326,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 297,
											"end": 326,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 297,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 297,
											"end": 326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 296,
											"end": 326,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 288,
											"end": 360,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 288,
											"end": 360,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 288,
											"end": 360,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 288,
											"end": 360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 288,
											"end": 360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 288,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 288,
											"end": 360,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 288,
											"end": 360,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 288,
											"end": 360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 403,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 386,
											"end": 399,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 371,
											"end": 400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 371,
											"end": 400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 371,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 371,
											"end": 400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 371,
											"end": 400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 371,
											"end": 400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 371,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 371,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 400,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 371,
											"end": 400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 371,
											"end": 407,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 371,
											"end": 407,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 371,
											"end": 407,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 443,
											"end": 456,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "A1AB8644E9A7C3B0E098A944A8972D4492D3B65382F144C9404228109FD2B9F1"
										},
										{
											"begin": 423,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 423,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 423,
											"end": 457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 423,
											"end": 457,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 457,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 423,
											"end": 457,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 423,
											"end": 457,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 423,
											"end": 457,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 217,
											"end": 465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 97,
											"end": 143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 97,
											"end": 143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1059,
											"end": 1066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1107,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1108,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1109,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1109,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1217,
											"end": 1222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1202,
											"end": 1223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1202,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1224,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1350,
											"end": 1359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1364,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1436,
											"end": 1437,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1418,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1374,
											"end": 1439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1374,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1621,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1452,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1536,
											"end": 1547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1565,
											"end": 1568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1558,
											"end": 1577,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1610,
											"end": 1614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1605,
											"end": 1608,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1586,
											"end": 1615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1621,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1621,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1452,
											"end": 1621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1806,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1627,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1798,
											"name": "PUSH",
											"source": 1,
											"value": "496E766F696365206E756D62657220616C72656164792073746F726564000000"
										},
										{
											"begin": 1763,
											"end": 1764,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1761,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1627,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 2178,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1812,
											"end": 2178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 2039,
											"end": 2041,
											"name": "PUSH",
											"source": 1,
											"value": "1D"
										},
										{
											"begin": 2034,
											"end": 2037,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1975,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 2042,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1975,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 2042,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 2042,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2140,
											"end": 2143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2051,
											"end": 2144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2051,
											"end": 2144,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 2051,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2171,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2164,
											"end": 2167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2160,
											"end": 2172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2172,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 2178,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 2178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 2178,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 2178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2603,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2184,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2350,
											"end": 2354,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2388,
											"end": 2390,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2377,
											"end": 2386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2431,
											"end": 2435,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2427,
											"end": 2447,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2412,
											"end": 2421,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2408,
											"end": 2425,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2401,
											"end": 2448,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2591,
											"end": 2595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 2465,
											"end": 2596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2465,
											"end": 2596,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 2465,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2457,
											"end": 2596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2603,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"elysium_receipt_invoice_number.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"invoiceNumbers(bytes32)": "ac386bea",
							"storeInvoiceNumber(bytes32)": "417b1a06"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"invoiceNumber\",\"type\":\"bytes32\"}],\"name\":\"InvoiceNumberStored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"invoiceNumbers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"invoiceNumber\",\"type\":\"bytes32\"}],\"name\":\"storeInvoiceNumber\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"elysium_receipt_invoice_number.sol\":\"InvoiceNumberStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"elysium_receipt_invoice_number.sol\":{\"keccak256\":\"0x9030c87c434aac3bf90f7d9b1943e94d13e2c21f785928981ed1edecfbf8fb44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9cf742d2321ab0a31544b9060e6ccc4d11c44858ec71b51b0c6df2acea030b8\",\"dweb:/ipfs/QmQLPUpG9hMzzUUTvybJjVk3w3VaeuXnrPFy5a1RWe13sp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 5,
								"contract": "elysium_receipt_invoice_number.sol:InvoiceNumberStorage",
								"label": "invoiceNumbers",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"elysium_receipt_invoice_number.sol": {
				"ast": {
					"absolutePath": "elysium_receipt_invoice_number.sol",
					"exportedSymbols": {
						"InvoiceNumberStorage": [
							34
						]
					},
					"id": 35,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "InvoiceNumberStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 34,
							"linearizedBaseContracts": [
								34
							],
							"name": "InvoiceNumberStorage",
							"nameLocation": "69:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "ac386bea",
									"id": 5,
									"mutability": "mutable",
									"name": "invoiceNumbers",
									"nameLocation": "129:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 34,
									"src": "97:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
										"typeString": "mapping(bytes32 => bool)"
									},
									"typeName": {
										"id": 4,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "105:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "97:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
											"typeString": "mapping(bytes32 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "116:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "a1ab8644e9a7c3b0e098a944a8972d4492d3b65382f144c9404228109fd2b9f1",
									"id": 9,
									"name": "InvoiceNumberStored",
									"nameLocation": "158:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "invoiceNumber",
												"nameLocation": "194:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "178:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 6,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "177:31:0"
									},
									"src": "152:57:0"
								},
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "277:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "296:30:0",
															"subExpression": {
																"baseExpression": {
																	"id": 15,
																	"name": "invoiceNumbers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 5,
																	"src": "297:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																		"typeString": "mapping(bytes32 => bool)"
																	}
																},
																"id": 17,
																"indexExpression": {
																	"id": 16,
																	"name": "invoiceNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "312:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "297:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e766f696365206e756d62657220616c72656164792073746f726564",
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "328:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9",
																"typeString": "literal_string \"Invoice number already stored\""
															},
															"value": "Invoice number already stored"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_06392012d679b7984f333b11ef7d94cac729c50891a9b73ef800b6e853e59bf9",
																"typeString": "literal_string \"Invoice number already stored\""
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "288:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "288:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "288:72:0"
											},
											{
												"expression": {
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 22,
															"name": "invoiceNumbers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "371:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
																"typeString": "mapping(bytes32 => bool)"
															}
														},
														"id": 24,
														"indexExpression": {
															"id": 23,
															"name": "invoiceNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "386:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "371:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 25,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "403:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "371:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "371:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 29,
															"name": "invoiceNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "443:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 28,
														"name": "InvoiceNumberStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "423:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32)"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "423:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "EmitStatement",
												"src": "418:39:0"
											}
										]
									},
									"functionSelector": "417b1a06",
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "storeInvoiceNumber",
									"nameLocation": "226:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "invoiceNumber",
												"nameLocation": "253:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "245:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 10,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "244:23:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "277:0:0"
									},
									"scope": 34,
									"src": "217:248:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 35,
							"src": "60:408:0",
							"usedErrors": []
						}
					],
					"src": "33:437:0"
				},
				"id": 0
			}
		}
	}
}